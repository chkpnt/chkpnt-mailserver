# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    config.vm.provider "virtualbox" do |v|
        v.linked_clone = true
        v.auto_nat_dns_proxy = false
      end
    
    config.vm.define "ns" do |sut|
        sut.vm.box = "opensuse/openSUSE-15.0-x86_64"
        sut.vm.hostname = "ns.test"
        sut.vm.network "private_network", ip: "10.0.3.2"
        sut.vm.provision :ansible do |ansible|
            ansible.force_remote_user = true
            ansible.compatibility_mode = "2.0"
            ansible.verbose = true
            ansible.playbook = "nameserver.yml"
        end
    end

    config.vm.define "sut" do |sut|
        sut.vm.box = "opensuse/openSUSE-15.0-x86_64"
        sut.vm.hostname = "sut.mydomain.test"
        sut.vm.network "private_network", ip: "10.0.3.10"
        sut.vm.provision :ansible do |ansible|
            ansible.compatibility_mode = "2.0"
            ansible.verbose = true
            ansible.playbook = "sut.yml"
        end
    end

    config.vm.define "client" do |sut|
        sut.vm.box = "opensuse/openSUSE-15.0-x86_64"
        sut.vm.hostname = "client.localdomain" # doens't match the DNS-RR by purpose
        sut.vm.network "private_network", ip: "10.0.3.201"
        sut.vm.provision :ansible do |ansible|
            ansible.compatibility_mode = "2.0"
            ansible.verbose = true
            ansible.playbook = "client.yml"
        end
    end

    config.vm.define "mail-sink" do |sut|
        sut.vm.box = "opensuse/openSUSE-15.0-x86_64"
        sut.vm.hostname = "mail-sink.theirdomain.test"
        sut.vm.network "private_network", ip: "10.0.3.20"
        sut.vm.provision :ansible do |ansible|
            ansible.compatibility_mode = "2.0"
            ansible.verbose = true
            ansible.playbook = "mail-sink.yml"
        end
    end

end